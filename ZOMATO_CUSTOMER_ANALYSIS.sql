create database ZOMATO_Sales
use ZOMATO_Sales
select * from goldusers_signup
select * from users
select * from sales
select * from products

--1.  What is the total amount each customer spent on Zomato?

SELECT S.USERID, SUM(P.PRICE) AS TOTAL_AMT
FROM SALES AS S
JOIN PRODUCTS AS P
ON S.PRODUCT_ID = P.PRODUCT_ID
GROUP BY USERID
ORDER BY USERID

--2. How many days has each customer visited on Zomato?



SELECT USERID, COUNT(DISTINCT CREATED_DATE) AS TOTAL_VISIT
FROM SALES 
GROUP BY USERID
--ORDER BY USERID
SELECT * FROM SALES
--3. What was the first product purchased by each customer?
SELECT * FROM
(SELECT *, RANK() OVER(PARTITION BY USERID ORDER BY CREATED_DATE) AS RANK 
FROM SALES) SALES
WHERE RANK=1;

-------->
SELECT DISTINCT userid, created_date
FROM sales
ORDER BY userid;

--4. What is the most purchased item in the menu and how many time was it purchased by all customers?
SELECT PRODUCT_ID, COUNT(PRODUCT_ID) CNT FROM SALES 
GROUP BY product_id
ORDER BY COUNT(PRODUCT_ID)
DESC
--
SELECT TOP 1 (PRODUCT_ID) FROM SALES 
--
SELECT * FROM SALES WHERE
PRODUCT_ID = 
(SELECT TOP 1 (PRODUCT_ID) FROM SALES GROUP BY PRODUCT_ID 
ORDER BY PRODUCT_ID DESC)
--
SELECT * FROM SALES WHERE
PRODUCT_ID = 
(SELECT TOP 1 (PRODUCT_ID) FROM SALES GROUP BY PRODUCT_ID 
ORDER BY COUNT(PRODUCT_ID) DESC)
--
SELECT USERID, COUNT(PRODUCT_ID) CNT FROM SALES WHERE
PRODUCT_ID = 
(SELECT TOP 1 (PRODUCT_ID) FROM SALES GROUP BY PRODUCT_ID 
ORDER BY COUNT(PRODUCT_ID) DESC)
GROUP BY USERID

--5. Which item was the most popular for each customer?

SELECT * FROM
(SELECT * , RANK() OVER(PARTITION BY userid ORDER BY cnt DESC) rank FROM
(SELECT userid , product_id , COUNT(product_id) AS cnt 
FROM sales 
GROUP BY userid , product_id)C) S
WHERE rank = 1

--6. Which item was purchased first after they became gold member?

SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid

---
SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date
---
SELECT C.*, RANK() OVER(PARTITION BY USERID ORDER BY CREATED_DATE) RANK FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date) C
---
SELECT * FROM
(SELECT C.*, RANK() OVER(PARTITION BY USERID ORDER BY CREATED_DATE) RANK FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date) C)D
WHERE RANK = 1

--7. Which item was purchased Just before they became gold member?
SELECT * FROM
(SELECT C.*, RANK() OVER(PARTITION BY USERID ORDER BY CREATED_DATE DESC) RANK FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date<gold_signup_date) C)D
WHERE RANK = 1

--8. What is the total order and total amount spent by each customers just before they become gold member?
SELECT USERID, COUNT(CREATED_DATE) ORDER_PURCHASED, SUM(PRICE) TOTAL_AMT_SPENT
FROM
(SELECT C.*, D.PRICE FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date<gold_signup_date)C INNER JOIN products D 
ON 
C.PRODUCT_ID = D.PRODUCT_ID)E
GROUP BY USERID



/*9. If buying each product generates points for example 5 Rs = 2 Zomato Points 
and each product has different purchasing points For example 
For p1  5 Rs = 1 Zomato Points, For p2  10 Rs = 5 Zomato Points 
and For p3  5 Rs = 1 Zomato Points.*/

--Calculate points collected by each customers and for which product most points have been given till now?

-- Part 1 of the question asked points collected by each customers
SELECT * FROM sales
SELECT * FROM products
SELECT * FROM goldusers_signup

SELECT C.USERID,C.PRODUCT_ID, SUM(PRICE) FROM
(SELECT A.*,B.PRICE FROM SALES A INNER JOIN
PRODUCTS B ON A.PRODUCT_ID = B.PRODUCT_ID)C
GROUP BY USERID, PRODUCT_ID;
---
SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5
WHEN PRODUCT_ID = 2 THEN 2
WHEN PRODUCT_ID = 3 THEN 5
ELSE 0 
END AS POINT FROM
(SELECT C.USERID,C.PRODUCT_ID, SUM(PRICE) AMT FROM
(SELECT A.*,B.PRICE FROM SALES A INNER JOIN
PRODUCTS B ON A.PRODUCT_ID = B.PRODUCT_ID)C
GROUP BY USERID, PRODUCT_ID)D;
-----

SELECT E.*,AMT/POINT TOTAL_POINTS FROM
(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5
WHEN PRODUCT_ID = 2 THEN 2
WHEN PRODUCT_ID = 3 THEN 5
ELSE 0 
END AS POINT FROM
(SELECT C.USERID,C.PRODUCT_ID, SUM(PRICE) AMT FROM
(SELECT A.*,B.PRICE FROM SALES A INNER JOIN
PRODUCTS B ON A.PRODUCT_ID = B.PRODUCT_ID)C
GROUP BY USERID, PRODUCT_ID)D)E;

---
SELECT USERID, SUM(TOTAL_POINTS) T FROM
(SELECT E.*,AMT/POINT TOTAL_POINTS FROM
(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5
WHEN PRODUCT_ID = 2 THEN 2
WHEN PRODUCT_ID = 3 THEN 5
ELSE 0 
END AS POINT FROM
(SELECT C.USERID,C.PRODUCT_ID, SUM(PRICE) AMT FROM
(SELECT A.*,B.PRICE FROM SALES A INNER JOIN
PRODUCTS B ON A.PRODUCT_ID = B.PRODUCT_ID)C
GROUP BY USERID, PRODUCT_ID)D)E)F GROUP BY USERID;
---
SELECT USERID, SUM(TOTAL_POINTS)*2.5 TOTAL_MONEY_EARNED FROM
(SELECT E.*,AMT/POINT TOTAL_POINTS FROM
(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5
WHEN PRODUCT_ID = 2 THEN 2
WHEN PRODUCT_ID = 3 THEN 5
ELSE 0 
END AS POINT FROM
(SELECT C.USERID,C.PRODUCT_ID, SUM(PRICE) AMT FROM
(SELECT A.*,B.PRICE FROM SALES A INNER JOIN
PRODUCTS B ON A.PRODUCT_ID = B.PRODUCT_ID)C
GROUP BY USERID, PRODUCT_ID)D)E)F GROUP BY USERID;

-- Part 2 of the question asked for product most points have been given till now

SELECT * FROM
(SELECT * , RANK() OVER(ORDER BY TOTAL_POINTS_EARNED DESC) RANK FROM
(SELECT PRODUCT_ID, SUM(TOTAL_POINTS) TOTAL_POINTS_EARNED FROM
(SELECT E.*,AMT/POINT TOTAL_POINTS FROM
(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5
WHEN PRODUCT_ID = 2 THEN 2
WHEN PRODUCT_ID = 3 THEN 5
ELSE 0 
END AS POINT FROM
(SELECT C.USERID,C.PRODUCT_ID, SUM(PRICE) AMT FROM
(SELECT A.*,B.PRICE FROM SALES A INNER JOIN
PRODUCTS B ON A.PRODUCT_ID = B.PRODUCT_ID)C
GROUP BY USERID, PRODUCT_ID)D)E)F GROUP BY PRODUCT_ID)F)G
WHERE RANK=1

/*10. In a first one year after a customer joins the gold membership (including their join date) 
irrespective of what the customer has purchased they earn 5 zomato points for every 10 RS spent who earned 
more 1 or 3 and what was their earnings in their first year?  
1 Zomato Points  =  Rs 2  or 0.5 Zomato Points = Rs 1*/
--
SELECT A.*, B.PRICE FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE 
FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date
AND
CREATED_DATE<=DATEADD(YEAR,1,gold_signup_date))A
INNER JOIN
products B
ON A.PRODUCT_ID = B.PRODUCT_ID

---
SELECT A.*, B.PRICE*0.5 TOTAL_POINT_EARNED FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE 
FROM SALES S
INNER JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date
AND
CREATED_DATE<=DATEADD(YEAR,1,gold_signup_date))A
INNER JOIN
products B
ON A.PRODUCT_ID = B.PRODUCT_ID
----

--11. Rank all transactions of the customers?

SELECT *, RANK() OVER(PARTITION BY USERID ORDER BY CREATED_DATE) RNK FROM SALES

---12. RANK ALL THE TRANSACTION FOR EACH MEMBER WHENEVER THEY ARE A zOMATO GOLD MEMBER FOR EVERY
--NON GOLD MEMBER TRANSACTION MARK AS NA

--LEFT JOIN SHOULD USED FOR EACH MEMBER

SELECT C.*, RANK() OVER(PARTITION BY USERID ORDER BY GOLD_SIGNUP_DATE DESC) RNK FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE 
FROM SALES S
LEFT JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date)C
---
SELECT C.*, 
CASE WHEN GOLD_SIGNUP_DATE IS NULL THEN 0 
ELSE
RANK() OVER(PARTITION BY USERID ORDER BY GOLD_SIGNUP_DATE DESC) END AS RNK FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE 
FROM SALES S
LEFT JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date)C

-- CONVERT INT COLUMN TO VARCHAR
SELECT D.*, CASE WHEN RNK=0 THEN 'NA' ELSE RNK END AS RNKK FROM
(SELECT C.*, CAST((
CASE WHEN GOLD_SIGNUP_DATE IS NULL THEN 0
ELSE
RANK() OVER(PARTITION BY USERID ORDER BY GOLD_SIGNUP_DATE DESC) END) AS VARCHAR) AS RNK FROM
(SELECT S.USERID,CREATED_DATE,PRODUCT_ID, GOLD_SIGNUP_DATE 
FROM SALES S
LEFT JOIN goldusers_signup G
ON
S.USERID = G.userid AND created_date>=gold_signup_date)C)D